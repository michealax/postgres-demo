<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="postgres.dao.StudentMapper" >
  <resultMap id="BaseResultMap" type="postgres.entity.Student" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="studentid" property="studentid" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="countryid" property="countryid" jdbcType="INTEGER" />
    <result column="stateid" property="stateid" jdbcType="INTEGER" />
    <result column="cityid" property="cityid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, studentid, name, gender, email, countryid, stateid, cityid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="postgres.entity.Student" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into student (id, studentid, name, 
      gender, email, countryid, 
      stateid, cityid)
    values (#{id,jdbcType=INTEGER}, #{studentid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{gender,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{countryid,jdbcType=INTEGER}, 
      #{stateid,jdbcType=INTEGER}, #{cityid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="postgres.entity.Student" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="studentid != null" >
        studentid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="countryid != null" >
        countryid,
      </if>
      <if test="stateid != null" >
        stateid,
      </if>
      <if test="cityid != null" >
        cityid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentid != null" >
        #{studentid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="countryid != null" >
        #{countryid,jdbcType=INTEGER},
      </if>
      <if test="stateid != null" >
        #{stateid,jdbcType=INTEGER},
      </if>
      <if test="cityid != null" >
        #{cityid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="postgres.entity.Student" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update student
    <set >
      <if test="studentid != null" >
        studentid = #{studentid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="countryid != null" >
        countryid = #{countryid,jdbcType=INTEGER},
      </if>
      <if test="stateid != null" >
        stateid = #{stateid,jdbcType=INTEGER},
      </if>
      <if test="cityid != null" >
        cityid = #{cityid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="postgres.entity.Student" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update student
    set studentid = #{studentid,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      countryid = #{countryid,jdbcType=INTEGER},
      stateid = #{stateid,jdbcType=INTEGER},
      cityid = #{cityid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- Custom queries-->
  <select id="selectAll" resultType="postgres.entity.custom.CustomStudent">
    select id, studentid, name, gender, email, countryname, statename, cityname
    from student natural join country natural join state natural join city
    order by studentid
  </select>

  <select id="orderStudent" resultType="postgres.entity.custom.CustomStudent">
    select id, studentid, name, gender, email, countryname, statename, cityname
    from student natural join country natural join state natural join city
    order by ${order}
  </select>
  <insert id="addStudent" useGeneratedKeys="true" keyProperty="id" parameterType="postgres.entity.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="studentid != null" >
        studentid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="countryid != null" >
        countryid,
      </if>
      <if test="stateid != null" >
        stateid,
      </if>
      <if test="cityid != null" >
        cityid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentid != null" >
        #{studentid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="countryid != null" >
        #{countryid,jdbcType=INTEGER},
      </if>
      <if test="stateid != null" >
        #{stateid,jdbcType=INTEGER},
      </if>
      <if test="cityid != null" >
        #{cityid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <select id="selectByStudentID" resultType="postgres.entity.Student">
    select * from student where studentid = #{studentid, jdbcType=VARCHAR}
  </select>

  <select id="getStudentByID" resultType="postgres.entity.custom.CustomStudent">
    select id, studentid, name, gender, email, countryname, statename, cityname
    from student natural join country natural join state natural join city
    where studentid = #{studentid, jdbcType=VARCHAR}
  </select>
</mapper>